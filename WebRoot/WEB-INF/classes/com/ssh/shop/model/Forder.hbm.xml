<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <class name="com.ssh.shop.model.Forder" table="forder" catalog="shop">
        <id name="id" type="java.lang.Integer">
            <column name="id" />
            <generator class="native" />
        </id>
        <property name="name" type="java.lang.String">
            <column name="name" length="20" />
        </property>
        <property name="phone" type="java.lang.String">
            <column name="phone" length="20" />
        </property>
        <property name="remark" type="java.lang.String">
            <column name="remark" length="20" />
        </property>
        <property name="date" type="java.sql.Timestamp">
            <column name="date" length="19" />
        </property>
        <property name="total" type="java.lang.Double">
            <column name="total" precision="8" />
        </property>
        <property name="post" type="java.lang.String">
            <column name="post" length="20" />
        </property>
        <property name="address" type="java.lang.String">
            <column name="address" length="200" />
        </property>
        <!-- 配置用户和状态对应关系 -->
        <many-to-one name="status" class="com.ssh.shop.model.Status">
        	<column name="sid"/>
        </many-to-one>
        <many-to-one name="user" class="com.ssh.shop.model.User">
        	<column name="uid"/>
        </many-to-one>
        <!-- 
        	配置购物项对应关系:
        		如果是多对一，则通过字表中的外键，查找对应主表的主键
        		如果是一对多，则通过主表中的主键，查找对应字表的外键
        		总结：都是通过一找多
        	
        	关于：lazy="true" fetch="join" cascade="all" inverse="false"
        		查询有关：lazy="true"（是否支持懒加载） fetch="join"（关联对象的抓取策略）  为了提升性能，此处不建议配置
        		更新有关：cascade="all"（是否支持级联操作，Hibernate中有独特级联插入） 
        				inverse="false"（反向，指定谁来维护外键，建议为true，如果为false，则在insert时不会插入外键值，会另外发update语句更新外键的值）
         -->
        <set name="sorderSet" lazy="true" fetch="join" cascade="all" inverse="true">
        	<!-- 代表外键 -->
        	<key>
        		<column name="fid"/>
        	</key>
        	<one-to-many class="com.ssh.shop.model.Sorder"/>
        </set>
    </class>
</hibernate-mapping>
